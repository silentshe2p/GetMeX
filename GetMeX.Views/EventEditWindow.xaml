<Window x:Class="GetMeX.Views.EventEditWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:ult="clr-namespace:GetMeX.ViewModels.Utilities;assembly=GetMeX.ViewModels"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
		mc:Ignorable="d" Height="480" Width="600"
		Title="{Binding ActionName}"
		Background="{DynamicResource MaterialDesignPaper}"
		TextElement.Foreground="{DynamicResource MaterialDesignBody}">

    <Window.Resources>
        <ult:ColorIdToHexConverter x:Key="ColorIdToHexConverter"/>
        <ult:ModifyEventStatusToVisibilityConverter x:Key="ModifyEventStatusToVisibilityConverter"/>
        <ult:EidToVisibilityConverter x:Key="EidToVisibilityConverter"/>
        <ult:StatusToIconConverter x:Key="StatusToIconConverter"/>
        <ult:StatusToForegroundConverter x:Key="StatusToForegroundConverter"/>
        <ult:StatusToTextConverter x:Key="StatusToTextConverter"/>
        
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <!-- Account information -->
        <Viewbox Grid.Row="1" MaxHeight="25" VerticalAlignment="Top"
                        Grid.Column="2" Grid.ColumnSpan="6">
            <wpf:Card Content="{Binding Account, Mode=OneWay}" Background="Orange"/>
        </Viewbox>

        <!-- Event summary (required) -->
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                            Grid.Row="2"  Grid.Column="1" Grid.ColumnSpan="2">
            <TextBlock Text="Summary" 
                            Style="{DynamicResource MaterialDesignSubheadingTextBlock}"/>
            <fa:ImageAwesome Icon="Asterisk" Foreground="PaleVioletRed"
                            MaxHeight="10" MaxWidth="10"/>
        </StackPanel>

        <TextBox Text="{Binding Event.Summary}" VerticalAlignment="Center"
                        FontSize="18" KeyDown="TextBox_CheckEventModified"
                        Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="6"
                        Style="{DynamicResource MaterialDesignTextBox}"/>

        <!-- Event start datetime (required) -->
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                            Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2">
            <TextBlock Text="From"
                            Style="{DynamicResource MaterialDesignSubheadingTextBlock}"/>
            <fa:ImageAwesome Icon="Asterisk" Foreground="PaleVioletRed"
                            MaxHeight="10" MaxWidth="10"/>
        </StackPanel>
        <DatePicker Grid.Row="3" Grid.Column="3" Grid.ColumnSpan="4"
                            BorderThickness="0" VerticalAlignment="Center"
                            SelectedDate="{Binding Event.StartDate}">
            <DatePicker.Resources>
                <Style TargetType="DatePickerTextBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{Binding Path=SelectedDate,
                                                                        RelativeSource={RelativeSource AncestorType=DatePicker},
                                                                        StringFormat={}{0:MM/dd/yyyy hh:mm:ss}}"
                                                FontSize="16" KeyDown="TextBox_CheckEventModified"
                                                Style="{DynamicResource MaterialDesignTextBox}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DatePicker.Resources>
        </DatePicker>

        <!-- Event end datetime (required) -->
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                            Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2">
            <TextBlock Text="Until"
                            Style="{DynamicResource MaterialDesignSubheadingTextBlock}"/>
            <fa:ImageAwesome Icon="Asterisk" Foreground="PaleVioletRed"
                            MaxHeight="10" MaxWidth="10"/>
        </StackPanel>

        <DatePicker Grid.Row="5" Grid.Column="3" Grid.ColumnSpan="4"
                            BorderThickness="0" VerticalAlignment="Center"
                            SelectedDate="{Binding Event.EndDate}">
            <DatePicker.Resources>
                <Style TargetType="DatePickerTextBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{Binding Path=SelectedDate,
                                                                        RelativeSource={RelativeSource AncestorType=DatePicker},
                                                                        StringFormat={}{0:MM/dd/yyyy hh:mm:ss}}"
                                                FontSize="16" KeyDown="TextBox_CheckEventModified"
                                                Style="{DynamicResource MaterialDesignTextBox}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DatePicker.Resources>
        </DatePicker>

        <!-- Event location -->
        <TextBlock Text="Location" Grid.Row="7" VerticalAlignment="Center"
                        Grid.Column="1" Grid.ColumnSpan="2"
                        Style="{DynamicResource MaterialDesignSubheadingTextBlock}"/>

        <TextBox Text="{Binding Event.Location}" VerticalAlignment="Center"
                        FontSize="16" KeyDown="TextBox_CheckEventModified"
                        Grid.Row="7" Grid.Column="3" Grid.ColumnSpan="6"
                        Style="{DynamicResource MaterialDesignTextBox}"/>

        <!-- Event description -->
        <TextBlock Text="Description" VerticalAlignment="Center"
                        Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="2"
                        Style="{DynamicResource MaterialDesignSubheadingTextBlock}"/>
        <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto"
                        Grid.Row="8" Grid.RowSpan="2" Grid.Column="3" Grid.ColumnSpan="6">
            <TextBox Text="{Binding Event.Description}"
                        Background="Transparent" TextWrapping="Wrap"
                        KeyDown="TextBox_CheckEventModified"
                        MaxWidth="{Binding Path=ActualWidth,
                                                          RelativeSource={RelativeSource AncestorType=ScrollViewer}}"
                        FontSize="16" FontFamily="Helvetica"/>
        </ScrollViewer>

        <!-- Event color selection -->
        <TextBlock Text="Color" Grid.Row="10" VerticalAlignment="Center"
                        Grid.Column="1" Grid.ColumnSpan="2"
                        Style="{DynamicResource MaterialDesignSubheadingTextBlock}"/>
        <ComboBox ItemsSource="{Binding ColorList}" Grid.Row="10" Grid.Column="3"
                            SelectedValue="{Binding Event.ColorId, Converter={StaticResource ColorIdToHexConverter}}"
                            Style="{DynamicResource MaterialDesignComboBox}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <fa:ImageAwesome Icon="Square" Foreground="{Binding}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <!-- Status -->
        <StackPanel Visibility="{Binding Status, Converter={StaticResource ModifyEventStatusToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Orientation="Horizontal" Grid.Row="11" Grid.ColumnSpan="8">
            <fa:ImageAwesome Icon="{Binding Status.Success, 
                                                        Converter={StaticResource StatusToIconConverter}, UpdateSourceTrigger=PropertyChanged}" 
                            Margin="0 0 14 0" MaxHeight="14" MaxWidth="14"
                            Foreground="{Binding Status.Success,
                                                    Converter={StaticResource StatusToForegroundConverter}, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="{Binding Status, Converter={StaticResource StatusToTextConverter}, UpdateSourceTrigger=PropertyChanged}" 
                            FontSize="14" Foreground="Red"/>
        </StackPanel>
        
        <!-- Save button -->
        <Button Content="Save"
                Grid.Row="12" Grid.Column="1" Grid.ColumnSpan="2"
				Command="{Binding DoWorkCommand}" IsEnabled="{Binding EventModified}"
				Style="{DynamicResource MaterialDesignRaisedAccentButton}"/>

        <!-- Delete button -->
        <Button Visibility="{Binding Event.EID, Converter={StaticResource EidToVisibilityConverter}}"
                Content="Delete"
                Grid.Row="12" Grid.Column="4" Grid.ColumnSpan="2"
				Command="{Binding DeleteEventCommand}"
				Style="{DynamicResource MaterialDesignRaisedAccentButton}"/>

        <!-- Cancel button -->
        <Button Content="Cancel"
				Grid.Row="12" Grid.Column="7" Grid.ColumnSpan="2"
				Command="{Binding CloseWindowCommand}" 
                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                                AncestorType={x:Type Window}}}"
				Style="{DynamicResource MaterialDesignRaisedLightButton}"/>
    </Grid>
</Window>